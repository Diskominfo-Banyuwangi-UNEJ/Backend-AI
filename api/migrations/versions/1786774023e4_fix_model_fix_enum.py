"""fix(model) : fix enum

Revision ID: 1786774023e4
Revises: 7f06b0a966dc
Create Date: 2025-05-24 23:23:54.854034

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = '1786774023e4'
down_revision = '7f06b0a966dc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('User', sa.Column('role', sa.Enum('ADMIN', 'PEMERINTAH', name='roleenum'), nullable=False))
    op.alter_column('User', sa.Column('nama_instansi', sa.Enum('KOMINFO', 'DISHUB', 'DLH', 'SATPOL_PP', name='namainstansi'), nullable=False))

    with op.batch_alter_table('pengaduan', schema=None) as batch_op:
        batch_op.drop_constraint('pengaduan_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['id_user'], ['id_user'])


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pengaduan', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('pengaduan_ibfk_1', 'user', ['id_user'], ['id_user'])

    # Convert data back to old enum values before altering column
    conn = op.get_bind()
    conn.execute(text("""
        UPDATE laporan 
        SET status_pengerjaan = 
            CASE 
                WHEN status_pengerjaan = 'DITERIMA' THEN 'BARU'
                WHEN status_pengerjaan = 'DALAM_PENGERJAAN' THEN 'DIBACA'
                ELSE status_pengerjaan
            END
    """))

    with op.batch_alter_table('laporan', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('laporan_ibfk_1', 'user', ['id_user'], ['id_user'])
        batch_op.alter_column('status_pengerjaan',
               existing_type=sa.Enum('DITERIMA', 'DALAM_PENGERJAAN', 'SELESAI', name='statuspengerjaan'),
               type_=mysql.ENUM('BARU', 'DIBACA', 'SELESAI'),
               existing_nullable=True)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_column('nama_instansi')
        batch_op.drop_column('role')
    # ### end Alembic commands ###